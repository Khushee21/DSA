LINK-https://www.geeksforgeeks.org/problems/top-k-frequent-elements-in-array/1

Given a non-empty integer array arr[]. Your task is to find and return the top k elements which have the highest frequency in the
 array.

Note: If two numbers have the same frequency, the larger number should be given the higher priority.

Examples:

Input: arr[] = [3, 1, 4, 4, 5, 2, 6, 1], k = 2
Output: [4, 1]
Explanation: Frequency of 4 is 2 and frequency of 1 is 2, these two have the maximum frequency and 4 is larger than 1.
Input: arr[] = [7, 10, 11, 5, 2, 5, 5, 7, 11, 8, 9], k = 4
Output: [5, 11, 7, 10]
Explanation: Frequency of 5 is 3, frequency of 11 is 2, frequency of 7 is 2, frequency of 10 is 1.
Constraints:
1 ≤ arr.size() ≤ 105
1 ≤ arr[i] ≤ 105
1 ≤ k ≤ no. of distinct elements

--------------------------------------------------------------------------------------------------------------------------------

SOLUTION__________________


class Solution {
    public ArrayList<Integer> topKFreq(int[] arr, int k) {
        Map<Integer, Integer> map = new HashMap<>();

        for (int num : arr) {
            map.put(num, map.getOrDefault(num, 0) + 1);
        }

        List<Integer> keys = new ArrayList<>(map.keySet());

        Collections.sort(keys, (a, b) -> {
            int freqCompare = map.get(b) - map.get(a);
            if (freqCompare == 0) return b - a; 
            return freqCompare;
        });

        ArrayList<Integer> result = new ArrayList<>();
        for (int i = 0; i < k && i < keys.size(); i++) {
            result.add(keys.get(i));
        }

        return result;
    }
}
