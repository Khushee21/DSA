Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.

 

Example 1:

Input: s = "abab"
Output: true
Explanation: It is the substring "ab" twice.
Example 2:

Input: s = "aba"
Output: false
Example 3:

Input: s = "abcabcabcabc"
Output: true
Explanation: It is the substring "abc" four times or the substring "abcabc" twice.
 

Constraints:

1 <= s.length <= 104
s consists of lowercase English letters.


------------------------------------------------------------------------------------------------------------------------------------------------


SOLUTION
----------

 public boolean repeatedSubstringPattern(String s) 
{
    for(int i=s.length()/2 ;i>=1 ;i++){
        if(s.length()/2 ==0){
            int repeatCount=s.length()/2;
            String substring=s.substring(0 , i);
            StringBuilder sb = new StringBuilder();
            for(int j=0 ; j<repeatCount ; j++){
                sb.append(substring);
            }

            if(sb.toString().equals(s)){
                return true;
            }
        }
    }
    
    return false;
}